#summary Examples of schroedinger.py

The outputs below were generated using the revision [http://hg.sympy.org/sfepy/rev/752f93f900de 752f93f900de].

= 2D =

Create a mesh:

{{{
$ ./schroedinger.py --mesh --2d
Dimension: 2
Info    : 'gmsh -2 tmp/mesh.geo -format mesh' started on Sat Jul 19 02:04:41 2008
Info    : Reading 'tmp/mesh.geo'
Info    : Read 'tmp/mesh.geo'
Info    : Meshing 1D...
Info    : Meshing curve 1 (Line)
Info    : Meshing curve 2 (Line)
Info    : Meshing curve 3 (Line)
Info    : Meshing curve 4 (Line)
Info    : Mesh 1D complete (0.028002 s)
Info    : Mesh
Info    : Meshing 2D...
Info    : Meshing surface 6 (Plane, MeshAdapt+Delaunay)
Info    : Mesh 2D complete (3.65223 s)
Info    : Mesh
Info    : 8100 vertices 16198 elements
Info    : Writing 'tmp/mesh.mesh'
Info    : Wrote 'tmp/mesh.mesh'
Mesh written to tmp/mesh.vtk
}}}

== potential well ==

{{{
$ ./schroedinger.py --well
Dimension: 2
sfepy: left over: ['tau', 'n_eigs', 'mesh', 'quadr', 'dim', 'base_approx']
sfepy: reading mesh (tmp/mesh.vtk)...
sfepy: ...done in 0.37 s
sfepy: setting up domain edges...
sfepy: ...done in 0.10 s
sfepy: creating regions...
sfepy:     leaf Omega region_1000
sfepy:     leaf Surface region_2
sfepy: ...done in 0.11 s
sfepy: equation "rhs":
sfepy: dw_mass_scalar.i1.Omega( v, Psi )
sfepy: equation "lhs":
sfepy:   dw_laplace.i1.Omega( m.val, v, Psi )
                   + dw_mass_scalar_variable.i1.Omega( matV.V, v, Psi )
sfepy: describing geometries...
sfepy: ...done in 0.02 s
sfepy: setting up dof connectivities...
sfepy: ...done in 0.00 s
sfepy: matrix shape: (8072, 8072)
sfepy: assembling matrix graph...
sfepy: ...done in 0.02 s
sfepy: matrix structural nonzeros: 56442 (8.66e-04% fill)
sfepy: updating materials...
sfepy:     m
sfepy:     matV
sfepy: ...done in 0.00 s
sfepy: assembling lhs...
sfepy:   setting up dof connectivities...
sfepy:   ...done in 0.00 s
sfepy: ...done in 0.04 s
sfepy: assembling rhs...
sfepy:   setting up dof connectivities...
sfepy:   ...done in 0.00 s
sfepy: ...done in 0.02 s
computing resonance frequencies...
sfepy: loading...
sfepy: ...done
sfepy: solving...
sfepy:   number of converged eigenvalues: 10
sfepy: ...done in 3.10 s
sfepy: reading mesh (tmp/mesh.vtk)...
sfepy: ...done in 0.42 s
a=100.000000
Energies:
n      exact         FEM      error
0:  0.00098696   0.00100813   2.14%
1:  0.00246740   0.00255738   3.65%
2:  0.00246740   0.00256454   3.94%
3:  0.00394784   0.00421025   6.65%
4:  0.00493480   0.00524481   6.28%
5:  0.00493480   0.00525660   6.52%
6:  0.00641524   0.00705958  10.04%
7:  0.00641524   0.00706794  10.17%
8:  0.00838916   0.00916761   9.28%
9:  0.00838916   0.00920827   9.76%
Solution saved to mesh.vtk
}}}

== oscillator ==

{{{
$ ./schroedinger.py --oscillator
Dimension: 2
sfepy: left over: ['tau', 'n_eigs', 'mesh', 'quadr', 'dim', 'base_approx']
sfepy: reading mesh (tmp/mesh.vtk)...
sfepy: ...done in 0.36 s
sfepy: setting up domain edges...
sfepy: ...done in 0.10 s
sfepy: creating regions...
sfepy:     leaf Omega region_1000
sfepy:     leaf Surface region_2
sfepy: ...done in 0.08 s
sfepy: equation "rhs":
sfepy: dw_mass_scalar.i1.Omega( v, Psi )
sfepy: equation "lhs":
sfepy:   dw_laplace.i1.Omega( m.val, v, Psi )
                   + dw_mass_scalar_variable.i1.Omega( matV.V, v, Psi )
sfepy: describing geometries...
sfepy: ...done in 0.01 s
sfepy: setting up dof connectivities...
sfepy: ...done in 0.00 s
sfepy: matrix shape: (8072, 8072)
sfepy: assembling matrix graph...
sfepy: ...done in 0.02 s
sfepy: matrix structural nonzeros: 56442 (8.66e-04% fill)
sfepy: updating materials...
sfepy:     m
sfepy:     matV
sfepy: ...done in 0.00 s
sfepy: assembling lhs...
sfepy:   setting up dof connectivities...
sfepy:   ...done in 0.00 s
sfepy: ...done in 0.03 s
sfepy: assembling rhs...
sfepy:   setting up dof connectivities...
sfepy:   ...done in 0.00 s
sfepy: ...done in 0.02 s
computing resonance frequencies...
sfepy: loading...
sfepy: ...done
sfepy: solving...
sfepy:   number of converged eigenvalues: 16
sfepy: ...done in 7.38 s
sfepy: reading mesh (tmp/mesh.vtk)...
sfepy: ...done in 0.36 s
a=100.000000
Energies:
n      exact         FEM      error
0:  1.00000000   1.00081703   0.08%
1:  2.00000000   2.00158339   0.08%
2:  2.00000000   2.00175346   0.09%
3:  3.00000000   3.00302269   0.10%
4:  3.00000000   3.00334897   0.11%
5:  3.00000000   3.00346025   0.12%
6:  4.00000000   4.00498898   0.12%
7:  4.00000000   4.00571512   0.14%
8:  4.00000000   4.00606336   0.15%
9:  4.00000000   4.00631703   0.16%
10:  5.00000000   5.00743227   0.15%
11:  5.00000000   5.00868813   0.17%
12:  5.00000000   5.00947456   0.19%
13:  5.00000000   5.01031228   0.21%
14:  5.00000000   5.01042976   0.21%
15:  6.00000000   6.01161255   0.19%
Solution saved to mesh.vtk
}}}

== hydrogen ==

{{{
$ ./schroedinger.py --hydrogen
Dimension: 2
sfepy: left over: ['tau', 'n_eigs', 'mesh', 'quadr', 'dim', 'base_approx']
sfepy: reading mesh (tmp/mesh.vtk)...
sfepy: ...done in 0.38 s
sfepy: setting up domain edges...
sfepy: ...done in 0.08 s
sfepy: creating regions...
sfepy:     leaf Omega region_1000
sfepy:     leaf Surface region_2
sfepy: ...done in 0.10 s
sfepy: equation "rhs":
sfepy: dw_mass_scalar.i1.Omega( v, Psi )
sfepy: equation "lhs":
sfepy:   dw_laplace.i1.Omega( m.val, v, Psi )
                   + dw_mass_scalar_variable.i1.Omega( matV.V, v, Psi )
sfepy: describing geometries...
sfepy: ...done in 0.01 s
sfepy: setting up dof connectivities...
sfepy: ...done in 0.01 s
sfepy: matrix shape: (8072, 8072)
sfepy: assembling matrix graph...
sfepy: ...done in 0.01 s
sfepy: matrix structural nonzeros: 56442 (8.66e-04% fill)
sfepy: updating materials...
sfepy:     m
sfepy:     matV
sfepy: ...done in 0.01 s
sfepy: assembling lhs...
sfepy:   setting up dof connectivities...
sfepy:   ...done in 0.00 s
sfepy: ...done in 0.03 s
sfepy: assembling rhs...
sfepy:   setting up dof connectivities...
sfepy:   ...done in 0.00 s
sfepy: ...done in 0.02 s
computing resonance frequencies...
sfepy: loading...
sfepy: ...done
sfepy: solving...
sfepy:   number of converged eigenvalues: 10
sfepy: ...done in 10.35 s
sfepy: reading mesh (tmp/mesh.vtk)...
sfepy: ...done in 0.43 s
a=100.000000
Energies:
n      exact         FEM      error
0:  -0.50000000   -0.48444312   3.11%
1:  -0.05555556   -0.05546226   0.17%
2:  -0.05555556   -0.05490833   1.17%
3:  -0.02000000   -0.01987759   0.61%
4:  -0.02000000   -0.01986552   0.67%
5:  -0.02000000   -0.01978261   1.09%
6:  -0.02000000   -0.01974034   1.30%
7:  -0.02000000   -0.01973349   1.33%
8:  -0.01020408   -0.00961296   5.79%
9:  -0.01020408   -0.00959015   6.02%
Solution saved to mesh.vtk
}}}