#summary How to use paraview to view results from sfepy

= Introduction =

Excellent official documentation is in [http://www.paraview.org/Wiki/images/2/26/Servermanager.pdf Servermanager.pdf], so here we just show how to get you started with paraview and sfepy. Consult the official documentation for more advanced stuff.

= Tutorial =

{{{
$ ./schroedinger.py
$ paraview --data=t.1.vtk
}}}
Hit "Apply". Hit the "Clip" button, "Apply". Move the result with mouse to see it better.
File -> Save State -> "state". This will save the current state into a xml file "state.pvsm". Look into it so that you get a feeling about it:
{{{
$ vim state.pvsm
}}}
Then create a script `t.py`:
{{{
from sfepy.base.base import pause
from paraview import servermanager as sm
c = sm.Connect()
sm.LoadState("state.pvsm")
view = sm.GetRenderView()
view.StillRender()
pause()
view.WriteImage("image.png", "vtkPNGWriter", 1)
}}}
And execute the script using (adjust the path to your installation of paraview):
{{{
$ export P=/home/ondra/ext/paraview-3.2.1-Linux-x86/lib/paraview-3.2/
$ LD_LIBRARY_PATH=$P PYTHONPATH=$P python2.5 t.py
}}}
A simple window will popup showing the result. The `pause()` command is necessary, as the windows is automatically closed when the script finishes. You can use Python's `raw_input()` instead.

Example report generated automatically using Paraview Python scripting facilities:
[http://sfepy.googlecode.com/svn/web/docs/bones_report.pdf bones_report.pdf]

=== Animating Legacy VTK Files ===

Tested with Paraview 3.3.0:

1. Name your .vtk files as {{{<basename>.<number>.vtk}}}, where {{{<number>}}} is e.g. 00, 01, ... , 99.

2. Start paraview, in menu 'File->Open'. The files should be listed as a group called {{{<basename>...vtk}}}.

3. Press 'Apply'.

4. Set-up the scene.

5. Press the animation play button, or in menu 'Animation->Play'.