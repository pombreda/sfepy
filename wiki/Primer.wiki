#summary A beginner's tutorial on using SfePy.

= Introduction =

Welcome to this primer on SfePy. To get you started, a step-by-step walk-through of the process to solve a simple mechanics problem is presented. The typical process to solve a problem using SfePy is followed: a model is meshed, a problem definition file is drafted, SfePy is run to solve the problem and finally the results of the analysis are illustrated. 


== Problem definition ==

A popular test to measure the tensile strength of concrete or asphalt materials is the indirect tensile strength test pictured below.  

http://groups.google.com/group/sfepy-devel/web/ITS.png

In this test a circular cylindrical specimen is loaded across its diameter to failure. The test is usually done by loading the specimen at a constant deformation rate of 50 mm/minute (say) and measuring the load response. When the tensile stress that develops in the specimen under loading exceeds its tensile strength then the specimen will fail. To model this problem using finite elements the indirect tensile test can be simplified to represent a diametrically point loaded disk as shown below.    

http://groups.google.com/group/sfepy-devel/web/ITS2D.png

The tensile and compressive stresses that develop in the centre of the specimen as a result of the point loads P are a function of the diameter (D) and thickness (t) of the cylindrical specimen. These are, respectively:

<wiki:gadget url="http://mathml-gadget.googlecode.com/svn/trunk/mathml-gadget.xml" border="0" up_content="sigma_{t} = (2 cdot P) / (pi cdot t cdot D)"/>

<wiki:gadget url="http://mathml-gadget.googlecode.com/svn/trunk/mathml-gadget.xml" border="0" up_content="sigma_{c} = (6 cdot P) / (pi cdot t cdot D)"/>

These solutions may be approximated using finite element analyses. To solve this problem using SfePy the first step is meshing a suitable model.

= Meshing = 

Assuming plane strain conditions, the indirect tensile test may be modeled using a 2-D finite element mesh. Furthermore, the geometry of the model is symmetrical about the x- and y-axes passing through the centre of the circle. To take advantage of this symmetry only one quarter of the 2-D model will be meshed and boundary conditions will be established to indicate this symmetry. The meshing program Gmsh is used in this tutorial to very quickly mesh the model.

The indirect tensile test specimen has a diameter of 150 mm. Using Gmsh add three new Points (geometry elementary entities) at the following coordinates:
(0.0 0.0), (75.0,0.0) and (0.0,75.0). Next add two straight lines connecting the points as shown below.

http://groups.google.com/group/sfepy-devel/web/mesh1.png

Next add a Circle arc connecting two of the points as shown below.

http://groups.google.com/group/sfepy-devel/web/mesh2.png 

Still under Geometry add a Ruled surface.

http://groups.google.com/group/sfepy-devel/web/mesh3.png  
   
With the geometry of the model defined, add a mesh by clicking on the 2D button under the Mesh functions.

http://groups.google.com/group/sfepy-devel/web/mesh4.png

That's it, we're done with the meshing. Save the mesh in a format that SfePy recognizes. For now use the medit .mesh format e.g. its2D.mesh.




  

  

 




*Still under construction - check back later*